---
import { JWT_SECRET } from "astro:env/server";
import jwt from "jsonwebtoken";

import { pb } from "../../../lib/config/pb";

export async function post({ request }: { request: Request }) {
  try {
    const { id } = await request.json();
    if (!id) return new Response("Missing id", { status: 400 });

    const chat = await pb.collection("chats").getOne(id);
    if (!chat) return new Response("Chat not found", { status: 404 });

    const origin = request.headers.get("origin"); // || request.headers.get("referer");
    if (!origin) return new Response("Missing Origin", { status: 400 });

    let originHost;
    try {
      originHost = new URL(origin).hostname;
    } catch {
      originHost = origin;
    }

    if (chat.domain !== originHost) {
      return new Response("Forbidden", { status: 403 });
    }

    const payload = {
      id: chat.id,
      origin: originHost,
      domain: chat.domain,
      theme: chat.theme,
    };
    const token = jwt.sign(payload, JWT_SECRET);
    return new Response(JSON.stringify({ token, payload }), {
      status: 200,
      headers: { "Content-Type": "application/json" },
    });
  } catch (err) {
    return new Response("Server error", { status: 500 });
  }
}
---
